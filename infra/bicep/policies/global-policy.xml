<!--
    Global API Management Policy
    Applied to all APIs in the APIM instance
-->
<policies>
    <inbound>
        <!-- Add correlation ID for request tracking -->
        <set-variable name="correlationId" value="@(context.Request.Headers.GetValueOrDefault("X-Correlation-ID", Guid.NewGuid().ToString()))" />
        <set-header name="X-Correlation-ID" exists-action="override">
            <value>@(context.Variables["correlationId"])</value>
        </set-header>
        
        <!-- Security headers -->
        <set-header name="X-Content-Type-Options" exists-action="override">
            <value>nosniff</value>
        </set-header>
        <set-header name="X-Frame-Options" exists-action="override">
            <value>DENY</value>
        </set-header>
        <set-header name="X-XSS-Protection" exists-action="override">
            <value>1; mode=block</value>
        </set-header>
        
        <!-- Remove server information -->
        <set-header name="Server" exists-action="delete" />
        
        <!-- Rate limiting -->
        <rate-limit-by-key calls="1000" renewal-period="3600" counter-key="@(context.Request.IpAddress)" />
        
        <!-- Log request start -->
        <log-to-eventhub logger-id="request-logger">@{
            return new JObject(
                new JProperty("timestamp", DateTime.UtcNow.ToString("yyyy-MM-ddTHH:mm:ss.fffZ")),
                new JProperty("correlationId", context.Variables["correlationId"]),
                new JProperty("method", context.Request.Method),
                new JProperty("url", context.Request.Url.ToString()),
                new JProperty("clientIP", context.Request.IpAddress),
                new JProperty("userAgent", context.Request.Headers.GetValueOrDefault("User-Agent", "")),
                new JProperty("eventType", "request-start")
            ).ToString();
        }</log-to-eventhub>
    </inbound>
    <backend>
        <forward-request timeout="60" />
    </backend>
    <outbound>
        <!-- Add response headers -->
        <set-header name="X-Response-Time" exists-action="override">
            <value>@(DateTime.UtcNow.Subtract((DateTime)context.Variables["RequestStartTime"]).TotalMilliseconds.ToString())</value>
        </set-header>
        <set-header name="X-Correlation-ID" exists-action="override">
            <value>@(context.Variables["correlationId"])</value>
        </set-header>
        
        <!-- Log response -->
        <log-to-eventhub logger-id="response-logger">@{
            return new JObject(
                new JProperty("timestamp", DateTime.UtcNow.ToString("yyyy-MM-ddTHH:mm:ss.fffZ")),
                new JProperty("correlationId", context.Variables["correlationId"]),
                new JProperty("statusCode", context.Response.StatusCode),
                new JProperty("responseTime", DateTime.UtcNow.Subtract((DateTime)context.Variables["RequestStartTime"]).TotalMilliseconds),
                new JProperty("eventType", "request-complete")
            ).ToString();
        }</log-to-eventhub>
    </outbound>
    <on-error>
        <!-- Error logging -->
        <set-variable name="errorDetails" value="@{
            return new JObject(
                new JProperty("timestamp", DateTime.UtcNow.ToString("yyyy-MM-ddTHH:mm:ss.fffZ")),
                new JProperty("correlationId", context.Variables.GetValueOrDefault("correlationId", Guid.NewGuid().ToString())),
                new JProperty("error", context.LastError?.Message ?? "Unknown error"),
                new JProperty("source", context.LastError?.Source ?? "Unknown source"),
                new JProperty("reason", context.LastError?.Reason ?? "Unknown reason"),
                new JProperty("eventType", "request-error")
            ).ToString();
        }" />
        
        <log-to-eventhub logger-id="error-logger">@(context.Variables["errorDetails"])</log-to-eventhub>
        
        <!-- Return standardized error response -->
        <return-response>
            <set-status code="500" reason="Internal Server Error" />
            <set-header name="Content-Type" exists-action="override">
                <value>application/json</value>
            </set-header>
            <set-header name="X-Correlation-ID" exists-action="override">
                <value>@(context.Variables.GetValueOrDefault("correlationId", Guid.NewGuid().ToString()))</value>
            </set-header>
            <set-body>@{
                return new JObject(
                    new JProperty("error", new JObject(
                        new JProperty("code", "InternalServerError"),
                        new JProperty("message", "An internal server error occurred. Please try again later."),
                        new JProperty("correlationId", context.Variables.GetValueOrDefault("correlationId", Guid.NewGuid().ToString())),
                        new JProperty("timestamp", DateTime.UtcNow.ToString("yyyy-MM-ddTHH:mm:ss.fffZ"))
                    ))
                ).ToString();
            }</set-body>
        </return-response>
    </on-error>
</policies>